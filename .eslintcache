[{"/home/user1/Documents/GitHub/dashboard/src/index.js":"1","/home/user1/Documents/GitHub/dashboard/src/App.js":"2","/home/user1/Documents/GitHub/dashboard/src/reportWebVitals.js":"3","/home/user1/Documents/GitHub/dashboard/src/Components/Main/Main.js":"4","/home/user1/Documents/GitHub/dashboard/src/Components/Header/Header.js":"5","/home/user1/Documents/GitHub/dashboard/src/Components/Card/Card.js":"6","/home/user1/Documents/GitHub/dashboard/src/Components/ScrollerIndex/ScrollerIndex.js":"7","/home/user1/Documents/GitHub/dashboard/src/Components/Main/coins.js":"8"},{"size":507,"mtime":1610752784134,"results":"9","hashOfConfig":"10"},{"size":739,"mtime":1610845669754,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610721168119,"results":"12","hashOfConfig":"10"},{"size":3416,"mtime":1610857510768,"results":"13","hashOfConfig":"10"},{"size":1347,"mtime":1610748553303,"results":"14","hashOfConfig":"10"},{"size":9716,"mtime":1610859894891,"results":"15","hashOfConfig":"10"},{"size":7169,"mtime":1610859552422,"results":"16","hashOfConfig":"10"},{"size":4387,"mtime":1610857778634,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"b83ai0",{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/user1/Documents/GitHub/dashboard/src/index.js",[],["41","42"],"/home/user1/Documents/GitHub/dashboard/src/App.js",["43","44","45","46","47","48"],"import React, { useState, useEffect, useRef, useReducer } from 'react';\nimport './App.css';\nimport { BrowserRouter, Link, Switch, Route, Redirect } from 'react-router-dom'\nimport Main from './Components/Main/Main'\nimport Header from './Components/Header/Header'\n\n\n\nconst App = (props) => {\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"TopHeader\">\n\t\t\t\t\t<h1 >\n\t\t\t\t\t\tDashboard\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t\t<Header />\n\t\t\t\t<Route path=\"/home\" component={Main}/>\n\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t<Redirect to=\"/home\" />\n\t\t\t\t</Route>\n\n\t\t\t\t{/* <Route path=\"/home\" component={Main}></Route>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Redirect to=\"/home\" />\n\t\t\t\t\t</Route> */}\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t)\n\n}\n\nexport default App;\n","/home/user1/Documents/GitHub/dashboard/src/reportWebVitals.js",[],"/home/user1/Documents/GitHub/dashboard/src/Components/Main/Main.js",["49","50","51","52","53","54"],"import React, { useState, useEffect, useRef, useReducer } from 'react';\nimport './Main.css';\nimport Card from '../Card/Card'\nimport ScrollerIndex from '../ScrollerIndex/ScrollerIndex'\nimport BTC from '../../Images/BTC.png'\nimport ETH from '../../Images/ETH.png'\nimport LTC from '../../Images/LTC.svg'\nconst Main = () => {\n    const [favState, setFavState] = useState({ faves: [] })\n    const [searchState, setSearchState] = useState(\"\")\n    console.log(searchState)\n    useEffect(() => {\n        setFavState({\n            faves: JSON.parse(localStorage.getItem('favorites')) || [{\n                apiName: \"BTC-USD\",\n                fullName: \"Bitcoin\",\n                shortName: \"BTC\"\n            },\n            {\n                apiName: \"ETH-USD\",\n                fullName: \"Ethereum\",\n                shortName: \"ETH\"\n            }]\n        })\n    }, []);\n    const addFavorite = (value) => {\n        let Cryptos = [...favState.faves]\n        Cryptos.push(value)\n        setFavState({ faves: Cryptos })\n        localStorage.setItem('favorites', JSON.stringify(Cryptos))\n        document.body.scrollTop = 0\n        document.documentElement.scrollTop = 0\n    }\n    const removeFavorite = (index) => {\n        let Cryptos = [...favState.faves]\n        Cryptos.splice(index, 1);\n        setFavState({ faves: Cryptos })\n        localStorage.setItem('favorites', JSON.stringify(Cryptos))\n    }\n\n\n    const inFaves = (crypto) => {\n        for (let i = 0; i < favState.faves.length; i++) {\n            if (crypto.apiName === favState.faves[i].apiName) {\n                return false\n            }\n        }\n        return true\n    }\n    const isSearched = (crypto) => {\n        if(crypto.fullName.toLowerCase().includes(searchState.toLowerCase()) ){\n            return true\n        }\n        if(crypto.shortName.toLowerCase().includes(searchState.toLowerCase()) ){\n            return true\n        }\n        return false\n    }\n\n    let ScrollerCryptos = require('./coins')\n\n    ScrollerCryptos = ScrollerCryptos.filter(inFaves)\n    ScrollerCryptos = ScrollerCryptos.filter(isSearched)\n    return (\n        <div className=\"Main\">\n            <h1 style={{ color: \"white\" }}>\n                Your favorite cryptos:\n            </h1>\n            <div className=\"TopCryptos\">\n                {favState.faves.map((value, index) => (\n                    <Card key={Math.random()} removeFavoriteClick={removeFavorite} crypto={value} index={index} />\n                ))}\n            </div>\n            <h1 style={{ color: \"white\" }}>\n                Other Coins\n            </h1>\n            <br></br>\n            <div className=\"CryptoSearch\" >\n                <input\n                    className=\"CryptoSearchInput\"\n                    type=\"text\"\n                    placeholder=\"Search for a coin\"\n                    value={searchState}\n                    onChange={(e)=>setSearchState(e.target.value)}\n                ></input>\n                {!(searchState!=\"\")?<div/>: <i className='fas fa-close' onClick={()=>setSearchState(\"\")}></i>}\n               \n            </div>\n\n            <div className=\"ScrollerCryptos\">\n                {ScrollerCryptos.map((value) => (\n                    <div>\n                        <ScrollerIndex key={Math.random()} addFavoriteClick={addFavorite} crypto={value} />\n                    </div>\n\n                ))}\n            </div>\n\n\n        </div>\n\n    )\n\n}\n\nexport default Main;\n","/home/user1/Documents/GitHub/dashboard/src/Components/Header/Header.js",["55","56","57","58","59","60"],"import React, { useState, useEffect } from 'react';\nimport './Header.css';\nimport { BrowserRouter, Link, Switch, Route } from 'react-router-dom'\n\nconst Header = (props) => {\n\n\n    let hdrValues = [\n        {\n            name: \"Home\",\n            value: \"home\"\n        },\n        {\n            name: \"Teaching\",\n            value: \"teaching\"\n        },\n        {\n            name: \"Resume\",\n            value: \"resume\"\n        },\n        {\n            name: \"Dissertation\",\n            value: \"dissertation\"\n        },\n        // {\n        //     name: \"Contact\",\n        //     value: \"contact\"\n        // },\n    ]\n\n\n\n        return (\n            <div className=\"HeaderContainer\">\n                <div className=\"HeaderButtonContainer\">\n                    {hdrValues.map((value) => (\n                        <Link key={Math.random()} to={\"/\" + value.value}>\n                            <button\n                                className=\"HeaderButton\"\n                                onClick={() => (document.body.scrollTop = 0, document.documentElement.scrollTop = 0)}\n                                value={value.value}>\n                                {value.name}\n                            </button>\n                        </Link>\n                    ))}\n                </div>\n\n\n            </div>\n        );\n\n\n\n\n\n\n}\nexport default Header;","/home/user1/Documents/GitHub/dashboard/src/Components/Card/Card.js",["61","62","63","64","65","66","67","68"],"import React, { useState, useEffect, useRef, useReducer } from 'react';\nimport './Card.css';\nimport BTC from '../../Images/BTC.png'\nimport ETH from '../../Images/ETH.png'\nimport LTC from '../../Images/LTC.svg'\nimport BCH from '../../Images/BCH.png'\nimport XRP from '../../Images/XRP.webp'\nimport EOS from '../../Images/EOS.png'\nimport DASH from '../../Images/DASH.png'\nimport XLM from '../../Images/XLM.webp'\nimport OXT from '../../Images/OXT.svg'\n\nimport MKR from '../../Images/MKR.png'\nimport ATOM from '../../Images/ATOM.png'\nimport XTZ from '../../Images/XTZ.png'\nimport ETC from '../../Images/ETC.png'\nimport OMG from '../../Images/OMG.png'\nimport ZEC from '../../Images/ZEC.png'\nimport LINK from '../../Images/LINK.png'\nimport REP from '../../Images/REP.png'\nimport ZRX from '../../Images/ZRX.png'\nimport ALGO from '../../Images/ALGO.png'\nimport DAI from '../../Images/DAI.png'\nimport KNC from '../../Images/KNC.png'\nimport COMP from '../../Images/COMP.svg'\nimport BAND from '../../Images/BAND.png'\nimport NMR from '../../Images/NMR.webp'\nimport CGLD from '../../Images/CGLD.png'\nimport UMA from '../../Images/UMA.png'\nimport LRC from '../../Images/LRC.png'\nimport YFI from '../../Images/YFI.svg'\nimport UNI from '../../Images/UNI.png'\nimport REN from '../../Images/REN.webp'\nimport BAL from '../../Images/BAL.png'\nimport WBTC from '../../Images/WBTC.png'\nimport NU from '../../Images/NU.png'\nimport FIL from '../../Images/FIL.png'\nimport AAVE from '../../Images/AAVE.png'\nimport GRT from '../../Images/GRT.png'\nimport BNT from '../../Images/BNT.svg'\nimport SNX from '../../Images/SNX.png'\n\nconst Card = (props) => {\n    const [state, setState] = useState({ price: -1, volume: 0 });\n    const CardContainerFieldRef = useRef();\n    const CardFieldRef = useRef();\n    const iconFieldRef = useRef();\n    const nameFieldRef = useRef();\n    const shortNameAssetField = useRef();\n    const priceAssetField = useRef();\n    const loadingAssetField1 = useRef();\n    const loadingAssetField2 = useRef();\n    const loadingAssetField3 = useRef();\n    const loadingAssetField4 = useRef();\n\n    useEffect(() => {\n\n        CardContainerFieldRef.current.addEventListener('mousemove', (event) => {\n            var bounds = CardContainerFieldRef.current.getBoundingClientRect();\n            //console.log(bounds)\n            // console.log(window.innerWidth)\n            // console.log(event.clientX)\n            // console.log(bounds.left)\n            // console.log(event.pageX)\n            //console.log(event.pageX-bounds.left)\n            let x = (window.innerWidth / 4 - (4 * event.clientX - 4 * bounds.left) / 1.5) / 100;\n            let y = (window.innerHeight / 2 - (4 * event.clientY - 4 * bounds.top) / 1.5) / 100;\n            try {\n                CardFieldRef.current.style.transition = \"none\";\n                CardFieldRef.current.style.transform = `rotateY(${x}deg) rotateX(${y}deg)`;\n            }\n            catch (e) { }\n        });\n        CardContainerFieldRef.current.addEventListener('mouseenter', (event) => {\n            try {\n                CardFieldRef.current.style.transition = \"all 1s ease\";\n                CardFieldRef.current.style.transition = \"none\";\n                //move items up\n                iconFieldRef.current.style.transform = \"translateZ(150px) \";\n                nameFieldRef.current.style.transform = \"translateZ(125px)\";\n                shortNameAssetField.current.style.transform = \"translateZ(100px)\";\n                priceAssetField.current.style.transform = \"translateZ(75px)\";\n            }\n            catch (e) { }\n        });\n\n        CardContainerFieldRef.current.addEventListener('mouseleave', (event) => {\n            try {\n                CardFieldRef.current.style.transition = \"all 1s ease\";\n                CardFieldRef.current.style.transform = \"none\";\n                //move items back down\n                iconFieldRef.current.style.transform = \"translateZ(0px)\";\n                nameFieldRef.current.style.transform = \"translateZ(0px)\";\n                shortNameAssetField.current.style.transform = \"translateZ(0px)\";\n                priceAssetField.current.style.transform = \"translateZ(0px)\";\n\n                \n            }\n            catch (e) { }\n        });\n\n        let websocket = new WebSocket(\"wss://ws-feed.pro.coinbase.com\");\n\n        websocket.addEventListener('open', function (event) {\n            websocket.send(JSON.stringify(\n                {\n                    type: \"subscribe\",\n                    product_ids: [\n                        props.crypto.apiName\n                    ],\n                    channels: [\n                        {\n                            name: \"ticker\",\n                            product_ids: [\n                                props.crypto.apiName,\n                            ]\n                        }\n                    ]\n                }\n            ));\n        });\n\n\n\n\n\n\n        websocket.onmessage = function (str) {\n            let data = JSON.parse(str.data)\n            try {\n                setState({ price: data.price, volume: data.volume_24h })\n            }\n            catch (e) { }\n\n        };\n\n        return () => websocket.close();\n    }, []);\n\n\n\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n    });\n    let image = BTC\n    switch (props.crypto.apiName) {\n        case \"BTC-USD\":\n            image = BTC;\n            break;\n        case \"ETH-USD\":\n            image = ETH;\n            break;\n        case \"LTC-USD\":\n            image = LTC;\n            break;\n        case \"BCH-USD\":\n            image = BCH;\n            break;\n        case \"XRP-USD\":\n            image = XRP;\n            break;\n        case \"EOS-USD\":\n            image = EOS;\n            break;\n        case \"DASH-USD\":\n            image = DASH;\n            break;\n        case \"XLM-USD\":\n            image = XLM;\n            break;\n        case \"OXT-USD\":\n            image = OXT;\n            break;\n        case \"MKR-USD\":\n            image = MKR;\n            break;\n        case \"ATOM-USD\":\n            image = ATOM;\n            break;\n        case \"XTZ-USD\":\n            image = XTZ;\n            break;\n        case \"ETC-USD\":\n            image = ETC;\n            break;\n        case \"OMG-USD\":\n            image = OMG;\n            break;\n        case \"ZEC-USD\":\n            image = ZEC;\n            break;\n        case \"LINK-USD\":\n            image = LINK;\n            break;\n        case \"REP-USD\":\n            image = REP;\n            break;\n        case \"ZRX-USD\":\n            image = ZRX;\n            break;\n        case \"ALGO-USD\":\n            image = ALGO;\n            break;\n        case \"DAI-USD\":\n            image = DAI;\n            break;\n        case \"KNC-USD\":\n            image = KNC;\n            break;\n        case \"COMP-USD\":\n            image = COMP;\n            break;\n        case \"BAND-USD\":\n            image = BAND;\n            break;\n        case \"NMR-USD\":\n            image = NMR;\n            break;\n        case \"CGLD-USD\":\n            image = CGLD;\n            break;\n        case \"UMA-USD\":\n            image = UMA;\n            break;\n        case \"LRC-USD\":\n            image = LRC;\n            break;\n        case \"YFI-USD\":\n            image = YFI;\n            break;\n        case \"UNI-USD\":\n            image = UNI;\n            break;\n        case \"REN-USD\":\n            image = REN;\n            break;\n        case \"BAL-USD\":\n            image = BAL;\n            break;\n        case \"WBTC-USD\":\n            image = WBTC;\n            break;\n        case \"NU-USD\":\n            image = NU;\n            break;\n        case \"FIL-USD\":\n            image = FIL;\n            break;\n        case \"AAVE-USD\":\n            image = AAVE;\n            break;\n        case \"GRT-USD\":\n            image = GRT;\n            break;\n        case \"BNT-USD\":\n            image = BNT;\n            break;\n        case \"SNX-USD\":\n            image = SNX;\n            break;\n        default:\n            image = BTC;\n    }\n    /*if (crypto.apiName === \"BTC-USD\") {\n        image = BTC\n    }\n    if (crypto.apiName === \"ETH-USD\") {\n        image = ETH\n    }\n    if (crypto.apiName === \"LTC-USD\") {\n        image = LTC\n    }*/\n    const clicker = () => {\n        console.log(\"pepe\")\n    }\n    return (\n        <div ref={CardContainerFieldRef} className=\"CardContainer\">\n            <div className=\"CardFavorites\" onClick={() => { props.removeFavoriteClick(props.index) }} >\n                <i className='fas fa-minus'></i>\n            </div>\n            <div ref={CardFieldRef} className=\"Card\">\n                <div ref={iconFieldRef} className=\"CardIcon\">\n                    <img className=\"CardIcon\" src={image} alt=\"BTC\" />\n                </div>\n                {state.price == -1 ?\n                    <div className=\"CardLoader\">\n                         <div className=\"CardLoaderOutside\"></div>\n                        <div className=\"CardLoaderInside1\"></div>\n                        <div className=\"CardLoaderInside2\"></div>\n                        <div className=\"CardLoaderInside3\"></div> \n                    </div>\n\n                    :\n                    <div className=\"CardInfo\">\n                        <h2 ref={shortNameAssetField} className=\"CardShortName\">\n                            {props.crypto.shortName}\n                        </h2>\n                        <h1 ref={nameFieldRef} className=\"CardName\">\n                            {props.crypto.fullName}\n                        </h1>\n\n                        <h1 ref={priceAssetField} className=\"CardPrice\">{formatter.format(state.price)}</h1>\n                    </div>\n                }\n\n\n\n\n\n\n            </div>\n        </div>\n\n    )\n\n}\n\nexport default Card;\n","/home/user1/Documents/GitHub/dashboard/src/Components/ScrollerIndex/ScrollerIndex.js",["69","70","71","72","73","74","75","76","77"],"import React, { useState, useEffect, useRef, useReducer } from 'react';\nimport './ScrollerIndex.css';\nimport BTC from '../../Images/BTC.png'\nimport ETH from '../../Images/ETH.png'\nimport LTC from '../../Images/LTC.svg'\nimport BCH from '../../Images/BCH.png'\nimport XRP from '../../Images/XRP.webp'\nimport EOS from '../../Images/EOS.png'\nimport DASH from '../../Images/DASH.png'\nimport XLM from '../../Images/XLM.webp'\nimport OXT from '../../Images/OXT.svg'\n\nimport MKR from '../../Images/MKR.png'\nimport ATOM from '../../Images/ATOM.png'\nimport XTZ from '../../Images/XTZ.png'\nimport ETC from '../../Images/ETC.png'\nimport OMG from '../../Images/OMG.png'\nimport ZEC from '../../Images/ZEC.png'\nimport LINK from '../../Images/LINK.png'\nimport REP from '../../Images/REP.png'\nimport ZRX from '../../Images/ZRX.png'\nimport ALGO from '../../Images/ALGO.png'\nimport DAI from '../../Images/DAI.png'\nimport KNC from '../../Images/KNC.png'\nimport COMP from '../../Images/COMP.svg'\nimport BAND from '../../Images/BAND.png'\nimport NMR from '../../Images/NMR.webp'\nimport CGLD from '../../Images/CGLD.png'\nimport UMA from '../../Images/UMA.png'\nimport LRC from '../../Images/LRC.png'\nimport YFI from '../../Images/YFI.svg'\nimport UNI from '../../Images/UNI.png'\nimport REN from '../../Images/REN.webp'\nimport BAL from '../../Images/BAL.png'\nimport WBTC from '../../Images/WBTC.png'\nimport NU from '../../Images/NU.png'\nimport FIL from '../../Images/FIL.png'\nimport AAVE from '../../Images/AAVE.png'\nimport GRT from '../../Images/GRT.png'\nimport BNT from '../../Images/BNT.svg'\nimport SNX from '../../Images/SNX.png'\n\n\n\nconst ScrollerIndex = (props) => {\n    const [state, setState] = useState({ price: -1, volume: 0 });\n    const CardContainerFieldRef = useRef();\n    const CardFieldRef = useRef();\n    const iconFieldRef = useRef();\n    const nameFieldRef = useRef();\n    const shortNameAssetField = useRef();\n    const priceAssetField = useRef();\n\n\n\n\n\n    useEffect(() => {\n        let websocket = new WebSocket(\"wss://ws-feed.pro.coinbase.com\");\n        websocket.addEventListener('open', function (event) {\n            websocket.send(JSON.stringify(\n                {\n                    type: \"subscribe\",\n                    product_ids: [\n                        props.crypto.apiName\n                    ],\n                    channels: [\n                        {\n                            name: \"ticker\",\n                            product_ids: [\n                                props.crypto.apiName,\n                            ]\n                        }\n                    ]\n                }\n            ));\n        });\n\n\n        websocket.onmessage = function (str) {\n            let data = JSON.parse(str.data)\n            try {\n                setState({ price: data.price, volume: data.volume_24h })\n            }\n            catch (e) { }\n\n        };\n\n        return () => websocket.close();\n    }, []);\n\n\n\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n    });\n    let image = BTC\n    switch (props.crypto.apiName) {\n        case \"BTC-USD\":\n            image = BTC;\n            break;\n        case \"ETH-USD\":\n            image = ETH;\n            break;\n        case \"LTC-USD\":\n            image = LTC;\n            break;\n        case \"BCH-USD\":\n            image = BCH;\n            break;\n        case \"XRP-USD\":\n            image = XRP;\n            break;\n        case \"EOS-USD\":\n            image = EOS;\n            break;\n        case \"DASH-USD\":\n            image = DASH;\n            break;\n        case \"XLM-USD\":\n            image = XLM;\n            break;\n        case \"OXT-USD\":\n            image = OXT;\n            break;\n        case \"MKR-USD\":\n            image = MKR;\n            break;\n        case \"ATOM-USD\":\n            image = ATOM;\n            break;\n        case \"XTZ-USD\":\n            image = XTZ;\n            break;\n        case \"ETC-USD\":\n            image = ETC;\n            break;\n        case \"OMG-USD\":\n            image = OMG;\n            break;\n        case \"ZEC-USD\":\n            image = ZEC;\n            break;\n        case \"LINK-USD\":\n            image = LINK;\n            break;\n        case \"REP-USD\":\n            image = REP;\n            break;\n        case \"ZRX-USD\":\n            image = ZRX;\n            break;\n        case \"ALGO-USD\":\n            image = ALGO;\n            break;\n        case \"DAI-USD\":\n            image = DAI;\n            break;\n        case \"KNC-USD\":\n            image = KNC;\n            break;\n        case \"COMP-USD\":\n            image = COMP;\n            break;\n        case \"BAND-USD\":\n            image = BAND;\n            break;\n        case \"NMR-USD\":\n            image = NMR;\n            break;\n        case \"CGLD-USD\":\n            image = CGLD;\n            break;\n        case \"UMA-USD\":\n            image = UMA;\n            break;\n        case \"LRC-USD\":\n            image = LRC;\n            break;\n        case \"YFI-USD\":\n            image = YFI;\n            break;\n        case \"UNI-USD\":\n            image = UNI;\n            break;\n        case \"REN-USD\":\n            image = REN;\n            break;\n        case \"BAL-USD\":\n            image = BAL;\n            break;\n        case \"WBTC-USD\":\n            image = WBTC;\n            break;\n        case \"NU-USD\":\n            image = NU;\n            break;\n        case \"FIL-USD\":\n            image = FIL;\n            break;\n        case \"AAVE-USD\":\n            image = AAVE;\n            break;\n        case \"GRT-USD\":\n            image = GRT;\n            break;\n        case \"BNT-USD\":\n            image = BNT;\n            break;\n        case \"SNX-USD\":\n            image = SNX;\n            break;\n        default:\n            image = BTC;\n    }\n\n    return (\n        <div className=\"ScrollerIndexWrapper\">\n            <div className=\"ScrollerIndexContainer\">\n                <div className=\"ScrollerIndex\">\n                    <div className=\"ScrollerIndexIcon\">\n                        <img className=\"ScrollerIndexImage\" src={image} alt=\"BTC\" />\n                    </div>\n                    <div className=\"ScrollerIndexInfo\">\n                        <h2 className=\"ScrollerIndexShortName\">\n                            {props.crypto.shortName}\n                        </h2>\n                        <h1 className=\"ScrollerIndexName\">\n                            {props.crypto.fullName}\n                        </h1>\n                        {state.price == -1 ?\n                            <div className=\"ScrollerIndexLoader\">\n                                <div className=\"ScrollerIndexLoaderOutside\"></div>\n                                <div className=\"ScrollerIndexLoaderInside\"></div>\n                            </div> :\n                            <h1 className=\"ScrollerIndexPrice\">{formatter.format(state.price)}</h1>\n                        }\n                    </div>\n                    <div className=\"ScrollerIndexFavorites\" onClick={() => props.addFavoriteClick(props.crypto)}>\n                        <i className='fas fa-plus'></i>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n\n}\n\nexport default ScrollerIndex;\n",["78","79"],"/home/user1/Documents/GitHub/dashboard/src/Components/Main/coins.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"88","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":36},{"ruleId":"84","severity":1,"message":"89","line":1,"column":38,"nodeType":"86","messageId":"87","endLine":1,"endColumn":44},{"ruleId":"84","severity":1,"message":"90","line":1,"column":46,"nodeType":"86","messageId":"87","endLine":1,"endColumn":56},{"ruleId":"84","severity":1,"message":"91","line":3,"column":25,"nodeType":"86","messageId":"87","endLine":3,"endColumn":29},{"ruleId":"84","severity":1,"message":"92","line":3,"column":31,"nodeType":"86","messageId":"87","endLine":3,"endColumn":37},{"ruleId":"84","severity":1,"message":"89","line":1,"column":38,"nodeType":"86","messageId":"87","endLine":1,"endColumn":44},{"ruleId":"84","severity":1,"message":"90","line":1,"column":46,"nodeType":"86","messageId":"87","endLine":1,"endColumn":56},{"ruleId":"84","severity":1,"message":"93","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":11},{"ruleId":"84","severity":1,"message":"94","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":11},{"ruleId":"84","severity":1,"message":"95","line":7,"column":8,"nodeType":"86","messageId":"87","endLine":7,"endColumn":11},{"ruleId":"96","severity":1,"message":"97","line":86,"column":31,"nodeType":"98","messageId":"99","endLine":86,"endColumn":33},{"ruleId":"84","severity":1,"message":"85","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"88","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":36},{"ruleId":"84","severity":1,"message":"100","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":23},{"ruleId":"84","severity":1,"message":"92","line":3,"column":31,"nodeType":"86","messageId":"87","endLine":3,"endColumn":37},{"ruleId":"84","severity":1,"message":"101","line":3,"column":39,"nodeType":"86","messageId":"87","endLine":3,"endColumn":44},{"ruleId":"102","severity":1,"message":"103","line":40,"column":76,"nodeType":"104","messageId":"105","endLine":40,"endColumn":77},{"ruleId":"84","severity":1,"message":"90","line":1,"column":46,"nodeType":"86","messageId":"87","endLine":1,"endColumn":56},{"ruleId":"84","severity":1,"message":"106","line":51,"column":11,"nodeType":"86","messageId":"87","endLine":51,"endColumn":29},{"ruleId":"84","severity":1,"message":"107","line":52,"column":11,"nodeType":"86","messageId":"87","endLine":52,"endColumn":29},{"ruleId":"84","severity":1,"message":"108","line":53,"column":11,"nodeType":"86","messageId":"87","endLine":53,"endColumn":29},{"ruleId":"84","severity":1,"message":"109","line":54,"column":11,"nodeType":"86","messageId":"87","endLine":54,"endColumn":29},{"ruleId":"110","severity":1,"message":"111","line":138,"column":8,"nodeType":"112","endLine":138,"endColumn":10,"suggestions":"113"},{"ruleId":"84","severity":1,"message":"114","line":274,"column":11,"nodeType":"86","messageId":"87","endLine":274,"endColumn":18},{"ruleId":"96","severity":1,"message":"115","line":286,"column":30,"nodeType":"98","messageId":"99","endLine":286,"endColumn":32},{"ruleId":"84","severity":1,"message":"90","line":1,"column":46,"nodeType":"86","messageId":"87","endLine":1,"endColumn":56},{"ruleId":"84","severity":1,"message":"116","line":47,"column":11,"nodeType":"86","messageId":"87","endLine":47,"endColumn":32},{"ruleId":"84","severity":1,"message":"117","line":48,"column":11,"nodeType":"86","messageId":"87","endLine":48,"endColumn":23},{"ruleId":"84","severity":1,"message":"118","line":49,"column":11,"nodeType":"86","messageId":"87","endLine":49,"endColumn":23},{"ruleId":"84","severity":1,"message":"119","line":50,"column":11,"nodeType":"86","messageId":"87","endLine":50,"endColumn":23},{"ruleId":"84","severity":1,"message":"120","line":51,"column":11,"nodeType":"86","messageId":"87","endLine":51,"endColumn":30},{"ruleId":"84","severity":1,"message":"121","line":52,"column":11,"nodeType":"86","messageId":"87","endLine":52,"endColumn":26},{"ruleId":"110","severity":1,"message":"111","line":90,"column":8,"nodeType":"112","endLine":90,"endColumn":10,"suggestions":"122"},{"ruleId":"96","severity":1,"message":"115","line":232,"column":38,"nodeType":"98","messageId":"99","endLine":232,"endColumn":40},{"ruleId":"80","replacedBy":"123"},{"ruleId":"82","replacedBy":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useReducer' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'BTC' is defined but never used.","'ETH' is defined but never used.","'LTC' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'loadingAssetField1' is assigned a value but never used.","'loadingAssetField2' is assigned a value but never used.","'loadingAssetField3' is assigned a value but never used.","'loadingAssetField4' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.crypto.apiName'. Either include it or remove the dependency array.","ArrayExpression",["127"],"'clicker' is assigned a value but never used.","Expected '===' and instead saw '=='.","'CardContainerFieldRef' is assigned a value but never used.","'CardFieldRef' is assigned a value but never used.","'iconFieldRef' is assigned a value but never used.","'nameFieldRef' is assigned a value but never used.","'shortNameAssetField' is assigned a value but never used.","'priceAssetField' is assigned a value but never used.",["128"],["125"],["126"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"129","fix":"131"},"Update the dependencies array to be: [props.crypto.apiName]",{"range":"132","text":"133"},{"range":"134","text":"133"},[5174,5176],"[props.crypto.apiName]",[2910,2912]]