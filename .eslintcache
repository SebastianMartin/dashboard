[{"/home/user1/Documents/GitHub/dashboard/src/index.js":"1","/home/user1/Documents/GitHub/dashboard/src/App.js":"2","/home/user1/Documents/GitHub/dashboard/src/reportWebVitals.js":"3","/home/user1/Documents/GitHub/dashboard/src/Components/Main/Main.js":"4","/home/user1/Documents/GitHub/dashboard/src/Components/Header/Header.js":"5","/home/user1/Documents/GitHub/dashboard/src/Components/Card/Card.js":"6","/home/user1/Documents/GitHub/dashboard/src/Components/ScrollerIndex/ScrollerIndex.js":"7","/home/user1/Documents/GitHub/dashboard/src/Data/coins.js":"8","/home/user1/Documents/GitHub/dashboard/src/Components/Portfolio/Portfolio.js":"9","/home/user1/Documents/GitHub/dashboard/src/reduxReducers/index.js":"10","/home/user1/Documents/GitHub/dashboard/src/reduxReducers/portfolio.js":"11","/home/user1/Documents/GitHub/dashboard/src/reduxActions/portfolio.js":"12"},{"size":783,"mtime":1610928832607,"results":"13","hashOfConfig":"14"},{"size":904,"mtime":1610927381180,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1610721168119,"results":"16","hashOfConfig":"14"},{"size":3497,"mtime":1610924177361,"results":"17","hashOfConfig":"14"},{"size":1349,"mtime":1610919269105,"results":"18","hashOfConfig":"14"},{"size":5333,"mtime":1610915643769,"results":"19","hashOfConfig":"14"},{"size":2748,"mtime":1610921962112,"results":"20","hashOfConfig":"14"},{"size":5539,"mtime":1610915608641,"results":"21","hashOfConfig":"14"},{"size":11577,"mtime":1611008471326,"results":"22","hashOfConfig":"14"},{"size":199,"mtime":1610928221020,"results":"23","hashOfConfig":"14"},{"size":343,"mtime":1610930037934,"results":"24","hashOfConfig":"14"},{"size":134,"mtime":1610929069626,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"21fwm9",{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/home/user1/Documents/GitHub/dashboard/src/index.js",[],"/home/user1/Documents/GitHub/dashboard/src/App.js",["56","57","58","59","60","61","62","63"],"import React, { useState, useEffect, useRef, useReducer } from 'react';\nimport './App.css';\nimport { BrowserRouter, Link, Switch, Route, Redirect } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Main from './Components/Main/Main'\nimport Header from './Components/Header/Header'\nimport Portfolio from './Components/Portfolio/Portfolio'\n\n\nconst App = (props) => {\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"TopHeader\">\n\t\t\t\t\t<h1 >\n\t\t\t\t\t\tDashboard\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t\t<Header />\n\t\t\t\t<Route path=\"/home\" component={Main}/>\n\t\t\t\t<Route path=\"/portfolio\" component={Portfolio}/>\n\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t<Redirect to=\"/home\" />\n\t\t\t\t</Route>\n\n\t\t\t\t{/* <Route path=\"/home\" component={Main}></Route>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Redirect to=\"/home\" />\n\t\t\t\t\t</Route> */}\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t)\n\n}\n\nexport default App;\n",["64","65"],"/home/user1/Documents/GitHub/dashboard/src/reportWebVitals.js",[],"/home/user1/Documents/GitHub/dashboard/src/Components/Main/Main.js",["66","67","68","69","70","71"],"import React, { useState, useEffect, useRef, useReducer } from 'react';\nimport './Main.css';\nimport Card from '../Card/Card'\nimport ScrollerIndex from '../ScrollerIndex/ScrollerIndex'\nimport BTC from '../../Images/BTC.png'\nimport ETH from '../../Images/ETH.png'\nimport LTC from '../../Images/LTC.svg'\nconst Main = () => {\n    const [favState, setFavState] = useState({ faves: [] })\n    const [searchState, setSearchState] = useState(\"\")\n    useEffect(() => {\n        setFavState({\n            faves: JSON.parse(localStorage.getItem('favorites')) || [{\n                apiName: \"BTC-USD\",\n                fullName: \"Bitcoin\",\n                shortName: \"BTC\",\n                image: \"BTC.png\"\n            },\n            {\n                apiName: \"ETH-USD\",\n                fullName: \"Ethereum\",\n                shortName: \"ETH\",\n                image: \"ETH.png\"\n            }]\n        })\n    }, []);\n    const addFavorite = (value) => {\n        let Cryptos = [...favState.faves]\n        Cryptos.push(value)\n        setFavState({ faves: Cryptos })\n        localStorage.setItem('favorites', JSON.stringify(Cryptos))\n        document.body.scrollTop = 0\n        document.documentElement.scrollTop = 0\n    }\n    const removeFavorite = (index) => {\n        let Cryptos = [...favState.faves]\n        Cryptos.splice(index, 1);\n        setFavState({ faves: Cryptos })\n        localStorage.setItem('favorites', JSON.stringify(Cryptos))\n    }\n\n\n    const inFaves = (crypto) => {\n        for (let i = 0; i < favState.faves.length; i++) {\n            if (crypto.apiName === favState.faves[i].apiName) {\n                return false\n            }\n        }\n        return true\n    }\n    const isSearched = (crypto) => {\n        if(crypto.fullName.toLowerCase().includes(searchState.toLowerCase()) ){\n            return true\n        }\n        if(crypto.shortName.toLowerCase().includes(searchState.toLowerCase()) ){\n            return true\n        }\n        return false\n    }\n\n    let ScrollerCryptos = require('../../Data/coins')\n    console.log(ScrollerCryptos)\n\n    ScrollerCryptos = ScrollerCryptos.filter(inFaves)\n    ScrollerCryptos = ScrollerCryptos.filter(isSearched)\n    return (\n        <div className=\"Main\">\n            <h1 style={{ color: \"white\" }}>\n                Your favorite cryptos:\n            </h1>\n            <div className=\"TopCryptos\">\n                {favState.faves.map((value, index) => (\n                    <Card key={Math.random()} removeFavoriteClick={removeFavorite} crypto={value} index={index} />\n                ))}\n            </div>\n            <h1 style={{ color: \"white\" }}>\n                Other Coins\n            </h1>\n            <br></br>\n            <div className=\"CryptoSearch\" >\n                <input\n                    className=\"CryptoSearchInput\"\n                    type=\"text\"\n                    placeholder=\"Search for a coin\"\n                    value={searchState}\n                    onChange={(e)=>setSearchState(e.target.value)}\n                ></input>\n                {!(searchState!=\"\")?<div/>: <i className='fas fa-close' onClick={()=>setSearchState(\"\")}></i>}\n               \n            </div>\n\n            <div className=\"ScrollerCryptos\">\n                {ScrollerCryptos.map((value) => (\n                    <div>\n                        <ScrollerIndex key={Math.random()} addFavoriteClick={addFavorite} crypto={value} />\n                    </div>\n\n                ))}\n            </div>\n\n\n        </div>\n\n    )\n\n}\n\nexport default Main;\n","/home/user1/Documents/GitHub/dashboard/src/Components/Header/Header.js",["72","73","74","75","76","77"],"import React, { useState, useEffect } from 'react';\nimport './Header.css';\nimport { BrowserRouter, Link, Switch, Route } from 'react-router-dom'\n\nconst Header = (props) => {\n\n\n    let hdrValues = [\n        {\n            name: \"Home\",\n            value: \"home\"\n        },\n        {\n            name: \"Portfolio\",\n            value: \"portfolio\"\n        },\n        {\n            name: \"Resume\",\n            value: \"resume\"\n        },\n        {\n            name: \"Dissertation\",\n            value: \"dissertation\"\n        },\n        // {\n        //     name: \"Contact\",\n        //     value: \"contact\"\n        // },\n    ]\n\n\n\n        return (\n            <div className=\"HeaderContainer\">\n                <div className=\"HeaderButtonContainer\">\n                    {hdrValues.map((value) => (\n                        <Link key={Math.random()} to={\"/\" + value.value}>\n                            <button\n                                className=\"HeaderButton\"\n                                onClick={() => (document.body.scrollTop = 0, document.documentElement.scrollTop = 0)}\n                                value={value.value}>\n                                {value.name}\n                            </button>\n                        </Link>\n                    ))}\n                </div>\n\n\n            </div>\n        );\n\n\n\n\n\n\n}\nexport default Header;","/home/user1/Documents/GitHub/dashboard/src/Components/Card/Card.js",["78","79","80","81","82","83","84","85"],"import React, { useState, useEffect, useRef, useReducer } from 'react';\nimport './Card.css';\n\n\nconst Card = (props) => {\n    const [state, setState] = useState({ price: -1, volume: 0 });\n    const CardContainerFieldRef = useRef();\n    const CardFieldRef = useRef();\n    const iconFieldRef = useRef();\n    const nameFieldRef = useRef();\n    const shortNameAssetField = useRef();\n    const priceAssetField = useRef();\n    const loadingAssetField1 = useRef();\n    const loadingAssetField2 = useRef();\n    const loadingAssetField3 = useRef();\n    const loadingAssetField4 = useRef();\n\n    useEffect(() => {\n\n        CardContainerFieldRef.current.addEventListener('mousemove', (event) => {\n            var bounds = CardContainerFieldRef.current.getBoundingClientRect();\n            //console.log(bounds)\n            // console.log(window.innerWidth)\n            // console.log(event.clientX)\n            // console.log(bounds.left)\n            // console.log(event.pageX)\n            //console.log(event.pageX-bounds.left)\n            let x = (window.innerWidth / 4 - (4 * event.clientX - 4 * bounds.left) / 1.5) / 100;\n            let y = (window.innerHeight / 2 - (4 * event.clientY - 4 * bounds.top) / 1.5) / 100;\n            try {\n                CardFieldRef.current.style.transition = \"none\";\n                CardFieldRef.current.style.transform = `rotateY(${x}deg) rotateX(${y}deg)`;\n            }\n            catch (e) { }\n        });\n        CardContainerFieldRef.current.addEventListener('mouseenter', (event) => {\n            try {\n                CardFieldRef.current.style.transition = \"all 1s ease\";\n                CardFieldRef.current.style.transition = \"none\";\n                //move items up\n                iconFieldRef.current.style.transform = \"translateZ(150px) \";\n                nameFieldRef.current.style.transform = \"translateZ(125px)\";\n                shortNameAssetField.current.style.transform = \"translateZ(100px)\";\n                priceAssetField.current.style.transform = \"translateZ(75px)\";\n            }\n            catch (e) { }\n        });\n\n        CardContainerFieldRef.current.addEventListener('mouseleave', (event) => {\n            try {\n                CardFieldRef.current.style.transition = \"all 1s ease\";\n                CardFieldRef.current.style.transform = \"none\";\n                //move items back down\n                iconFieldRef.current.style.transform = \"translateZ(0px)\";\n                nameFieldRef.current.style.transform = \"translateZ(0px)\";\n                shortNameAssetField.current.style.transform = \"translateZ(0px)\";\n                priceAssetField.current.style.transform = \"translateZ(0px)\";\n\n                \n            }\n            catch (e) { }\n        });\n\n        let websocket = new WebSocket(\"wss://ws-feed.pro.coinbase.com\");\n\n        websocket.addEventListener('open', function (event) {\n            websocket.send(JSON.stringify(\n                {\n                    type: \"subscribe\",\n                    product_ids: [\n                        props.crypto.apiName\n                    ],\n                    channels: [\n                        {\n                            name: \"ticker\",\n                            product_ids: [\n                                props.crypto.apiName,\n                            ]\n                        }\n                    ]\n                }\n            ));\n        });\n\n\n\n\n\n\n        websocket.onmessage = function (str) {\n            let data = JSON.parse(str.data)\n            try {\n                setState({ price: data.price, volume: data.volume_24h })\n            }\n            catch (e) { }\n\n        };\n\n        return () => websocket.close();\n    }, []);\n\n\n\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n    });\n\n    const clicker = () => {\n        console.log(\"pepe\")\n    }\n    return (\n        <div ref={CardContainerFieldRef} className=\"CardContainer\">\n            <div className=\"CardFavorites\" onClick={() => { props.removeFavoriteClick(props.index) }} >\n                <i className='fas fa-minus'></i>\n            </div>\n            <div ref={CardFieldRef} className=\"Card\">\n                <div ref={iconFieldRef} className=\"CardIcon\">\n                    <img className=\"CardIcon\" src={'/Images/'+props.crypto.image} alt=\"BTC\" />\n                </div>\n                {state.price == -1 ?\n                    <div className=\"CardLoader\">\n                         <div className=\"CardLoaderOutside\"></div>\n                        <div className=\"CardLoaderInside1\"></div>\n                        <div className=\"CardLoaderInside2\"></div>\n                        <div className=\"CardLoaderInside3\"></div> \n                    </div>\n\n                    :\n                    <div className=\"CardInfo\">\n                        <h2 ref={shortNameAssetField} className=\"CardShortName\">\n                            {props.crypto.shortName}\n                        </h2>\n                        <h1 ref={nameFieldRef} className=\"CardName\">\n                            {props.crypto.fullName}\n                        </h1>\n\n                        <h1 ref={priceAssetField} className=\"CardPrice\">{formatter.format(state.price)}</h1>\n                    </div>\n                }\n\n\n\n\n\n\n            </div>\n        </div>\n\n    )\n\n}\n\nexport default Card;\n","/home/user1/Documents/GitHub/dashboard/src/Components/ScrollerIndex/ScrollerIndex.js",["86","87","88","89"],"import React, { useState, useEffect, useRef, useReducer } from 'react';\nimport './ScrollerIndex.css';\n\n\n\n\nconst ScrollerIndex = (props) => {\n    const [state, setState] = useState({ price: -1, volume: 0 });\n\n    useEffect(() => {\n        let websocket = new WebSocket(\"wss://ws-feed.pro.coinbase.com\");\n        websocket.addEventListener('open', function (event) {\n            websocket.send(JSON.stringify(\n                {\n                    type: \"subscribe\",\n                    product_ids: [\n                        props.crypto.apiName\n                    ],\n                    channels: [\n                        {\n                            name: \"ticker\",\n                            product_ids: [\n                                props.crypto.apiName,\n                            ]\n                        }\n                    ]\n                }\n            ));\n        });\n        websocket.onmessage = function (str) {\n            let data = JSON.parse(str.data)\n            try {\n                setState({ price: data.price, volume: data.volume_24h })\n            }\n            catch (e) { }\n\n        };\n\n        return () => websocket.close();\n    }, []);\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n    });\n    return (\n        <div className=\"ScrollerIndexWrapper\">\n            <div className=\"ScrollerIndexContainer\">\n                <div className=\"ScrollerIndex\">\n                    <div className=\"ScrollerIndexIcon\">\n                        <img className=\"ScrollerIndexImage\" src={'/Images/'+props.crypto.image} alt=\"BTC\" />\n                    </div>\n                    <div className=\"ScrollerIndexInfo\">\n                        <h2 className=\"ScrollerIndexShortName\">\n                            {props.crypto.shortName}\n                        </h2>\n                        <h1 className=\"ScrollerIndexName\">\n                            {props.crypto.fullName}\n                        </h1>\n                        {state.price == -1 ?\n                            <div className=\"ScrollerIndexLoader\">\n                                <div className=\"ScrollerIndexLoaderOutside\"></div>\n                                <div className=\"ScrollerIndexLoaderInside\"></div>\n                            </div> :\n                            <h1 className=\"ScrollerIndexPrice\">{formatter.format(state.price)}</h1>\n                        }\n                    </div>\n                    <div className=\"ScrollerIndexFavorites\" onClick={() => props.addFavoriteClick(props.crypto)}>\n                        <i className='fas fa-plus'></i>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n\n}\n\nexport default ScrollerIndex;\n","/home/user1/Documents/GitHub/dashboard/src/Data/coins.js",[],"/home/user1/Documents/GitHub/dashboard/src/Components/Portfolio/Portfolio.js",["90","91","92","93","94","95","96","97","98","99"],"/home/user1/Documents/GitHub/dashboard/src/reduxReducers/index.js",[],"/home/user1/Documents/GitHub/dashboard/src/reduxReducers/portfolio.js",[],"/home/user1/Documents/GitHub/dashboard/src/reduxActions/portfolio.js",[],{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"100","severity":1,"message":"104","line":1,"column":27,"nodeType":"102","messageId":"103","endLine":1,"endColumn":36},{"ruleId":"100","severity":1,"message":"105","line":1,"column":38,"nodeType":"102","messageId":"103","endLine":1,"endColumn":44},{"ruleId":"100","severity":1,"message":"106","line":1,"column":46,"nodeType":"102","messageId":"103","endLine":1,"endColumn":56},{"ruleId":"100","severity":1,"message":"107","line":3,"column":25,"nodeType":"102","messageId":"103","endLine":3,"endColumn":29},{"ruleId":"100","severity":1,"message":"108","line":3,"column":31,"nodeType":"102","messageId":"103","endLine":3,"endColumn":37},{"ruleId":"100","severity":1,"message":"109","line":4,"column":10,"nodeType":"102","messageId":"103","endLine":4,"endColumn":21},{"ruleId":"100","severity":1,"message":"110","line":4,"column":23,"nodeType":"102","messageId":"103","endLine":4,"endColumn":34},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"100","severity":1,"message":"105","line":1,"column":38,"nodeType":"102","messageId":"103","endLine":1,"endColumn":44},{"ruleId":"100","severity":1,"message":"106","line":1,"column":46,"nodeType":"102","messageId":"103","endLine":1,"endColumn":56},{"ruleId":"100","severity":1,"message":"115","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":11},{"ruleId":"100","severity":1,"message":"116","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":11},{"ruleId":"100","severity":1,"message":"117","line":7,"column":8,"nodeType":"102","messageId":"103","endLine":7,"endColumn":11},{"ruleId":"118","severity":1,"message":"119","line":88,"column":31,"nodeType":"120","messageId":"121","endLine":88,"endColumn":33},{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"100","severity":1,"message":"104","line":1,"column":27,"nodeType":"102","messageId":"103","endLine":1,"endColumn":36},{"ruleId":"100","severity":1,"message":"122","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":23},{"ruleId":"100","severity":1,"message":"108","line":3,"column":31,"nodeType":"102","messageId":"103","endLine":3,"endColumn":37},{"ruleId":"100","severity":1,"message":"123","line":3,"column":39,"nodeType":"102","messageId":"103","endLine":3,"endColumn":44},{"ruleId":"124","severity":1,"message":"125","line":40,"column":76,"nodeType":"126","messageId":"127","endLine":40,"endColumn":77},{"ruleId":"100","severity":1,"message":"106","line":1,"column":46,"nodeType":"102","messageId":"103","endLine":1,"endColumn":56},{"ruleId":"100","severity":1,"message":"128","line":13,"column":11,"nodeType":"102","messageId":"103","endLine":13,"endColumn":29},{"ruleId":"100","severity":1,"message":"129","line":14,"column":11,"nodeType":"102","messageId":"103","endLine":14,"endColumn":29},{"ruleId":"100","severity":1,"message":"130","line":15,"column":11,"nodeType":"102","messageId":"103","endLine":15,"endColumn":29},{"ruleId":"100","severity":1,"message":"131","line":16,"column":11,"nodeType":"102","messageId":"103","endLine":16,"endColumn":29},{"ruleId":"132","severity":1,"message":"133","line":100,"column":8,"nodeType":"134","endLine":100,"endColumn":10,"suggestions":"135"},{"ruleId":"100","severity":1,"message":"136","line":109,"column":11,"nodeType":"102","messageId":"103","endLine":109,"endColumn":18},{"ruleId":"118","severity":1,"message":"137","line":121,"column":30,"nodeType":"120","messageId":"121","endLine":121,"endColumn":32},{"ruleId":"100","severity":1,"message":"105","line":1,"column":38,"nodeType":"102","messageId":"103","endLine":1,"endColumn":44},{"ruleId":"100","severity":1,"message":"106","line":1,"column":46,"nodeType":"102","messageId":"103","endLine":1,"endColumn":56},{"ruleId":"132","severity":1,"message":"133","line":40,"column":8,"nodeType":"134","endLine":40,"endColumn":10,"suggestions":"138"},{"ruleId":"118","severity":1,"message":"137","line":59,"column":38,"nodeType":"120","messageId":"121","endLine":59,"endColumn":40},{"ruleId":"100","severity":1,"message":"105","line":1,"column":38,"nodeType":"102","messageId":"103","endLine":1,"endColumn":44},{"ruleId":"100","severity":1,"message":"106","line":1,"column":46,"nodeType":"102","messageId":"103","endLine":1,"endColumn":56},{"ruleId":"100","severity":1,"message":"139","line":10,"column":9,"nodeType":"102","messageId":"103","endLine":10,"endColumn":23},{"ruleId":"132","severity":1,"message":"140","line":50,"column":8,"nodeType":"134","endLine":50,"endColumn":10,"suggestions":"141"},{"ruleId":"118","severity":1,"message":"137","line":104,"column":38,"nodeType":"120","messageId":"121","endLine":104,"endColumn":40},{"ruleId":"100","severity":1,"message":"142","line":141,"column":12,"nodeType":"102","messageId":"103","endLine":141,"endColumn":27},{"ruleId":"100","severity":1,"message":"143","line":141,"column":29,"nodeType":"102","messageId":"103","endLine":141,"endColumn":47},{"ruleId":"118","severity":1,"message":"119","line":156,"column":24,"nodeType":"120","messageId":"121","endLine":156,"endColumn":26},{"ruleId":"132","severity":1,"message":"144","line":201,"column":8,"nodeType":"134","endLine":201,"endColumn":10,"suggestions":"145"},{"ruleId":"124","severity":1,"message":"125","line":276,"column":84,"nodeType":"126","messageId":"127","endLine":276,"endColumn":85},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useReducer' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","no-native-reassign",["146"],"no-negated-in-lhs",["147"],"'BTC' is defined but never used.","'ETH' is defined but never used.","'LTC' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'loadingAssetField1' is assigned a value but never used.","'loadingAssetField2' is assigned a value but never used.","'loadingAssetField3' is assigned a value but never used.","'loadingAssetField4' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.crypto.apiName'. Either include it or remove the dependency array.","ArrayExpression",["148"],"'clicker' is assigned a value but never used.","Expected '===' and instead saw '=='.",["149"],"'portfolioState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.coin.amount', and 'props.coin.coin.apiName'. Either include them or remove the dependency array.",["150"],"'newCryptoAmount' is assigned a value but never used.","'setNewCryptoAmount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["151"],"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"152","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [props.crypto.apiName]",{"range":"159","text":"160"},{"range":"161","text":"160"},"Update the dependencies array to be: [dispatch, props.coin.amount, props.coin.coin.apiName]",{"range":"162","text":"163"},"Update the dependencies array to be: [dispatch]",{"range":"164","text":"165"},[3672,3674],"[props.crypto.apiName]",[1173,1175],[1995,1997],"[dispatch, props.coin.amount, props.coin.coin.apiName]",[7675,7677],"[dispatch]"]